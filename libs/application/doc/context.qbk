[/
    Copyright 2013 Renato Tegon Forti
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]

[section:context Application Context]
A central concept on Boost.Application is the 'aspects' that can be added to application context. 

User is free to add any aspect to Application Context, and many operations are available (thread-safe) to manipulate the 'aspect pool' of application, see below the complete list of methods available on Application Context Aspect Pool.

[table:acamm Application Context Aspect Manipulation Methods
    [[Operation Name]                     [Params]                                                                                                     [Return]                                                                                                                                [Condition]]
    [[add_aspect]                         [shared_ptr of aspect that you want add to the pool. Use make_shared<T> to contruct aspect.]                 [void]                                                                                                                                  [The aspect can not exist on the pool or an exception (std::logic_error) will be thrown.]]
    [[has_aspect]                         [None. User need provide a type of aspect as template param]                                                 [True if aspect exist on the pool]                                                                                                      [none]]
    [[get_aspect]                         [None. User need provide a type of aspect as template param]                                                 [shared_ptr of aspect that you want to use or void shared_ptr if aspect don't exist.]                                                   [none]]
    [[use_aspect]                         [None. User need provide a type of aspect as template param]                                                 [Reference of T (aspect)]                                                                                                               [The aspect must exist on the pool or an exception (std::logic_error) will be thrown.]]
    [[replace_aspect]                     [None. User need provide a type of aspect as template param]                                                 [void]                                                                                                                                  [The aspect must exist on the pool or an exception (std::logic_error) will be thrown.]]
    [[remove_aspect]                      [None. User need provide a type of aspect as template param]                                                 [void]                                                                                                                                  [The aspect must exist on the pool or an exception (std::logic_error) will be thrown.]]
    [[add_aspect_if_not_exists]           [shared_ptr of aspect that you want add to the pool. Use make_shared<T> to contruct aspect.]                 [true if the aspect did not exist and was successfully added, if the aspect already exists, returns false and nothing is done]                                                                                            [none]]
]

Refer to [@boost/application/entity/aspect_map.html Context (aspect_map)] reference to know more detail about provided methods.

[endsect]

