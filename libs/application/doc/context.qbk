[/
    Copyright 2013 Renato Tegon Forti
    Distributed under the Boost Software License, Version 1.0.
    (See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
/]

[section:context Using Application Context]
A central concept on Boost.Application is the 'aspects' that can be added to application context. 

Boost.Application provide a wide class of ready-to-use 'aspects' and user is free to customize or define anyone that he needs, basically we can classify the ready-to-use aspects in 2 groups:

* Simple or Common that can be any class, e.g.:
[pre
args                         : Provide functionality for handling arguments of the application.
path                         : Provide functionality for handling paths of the application.
run_mode                     : Provide information of application running mode (common or server).
status                       : Provide information about current satatus of application (sopped, running or paused).
wait_for_termination_request : Provide functionality for wait for task completion.
]
* Handler, that has a callback associated to it, e.g.:
[pre
pause_handler                : When 'pause' event is detected, fire a user defined callback.
resume_handler               : When 'resume' event is detected, fire a user defined callback.
termination_handler          : When 'stop' signal/event is detected, fire a user defined callback.
limit_single_instance        : When single instance feature is enabled, fire a user defined callback to handle it.
]

[note	
	   Note that that the application launch<mode> tie 'run_mode' and 'status' aspects to application context in automatic way.
]

For sample, the following code show the use of 'path' aspect.
[import ../example/path.cpp]
[path]

[endsect]

